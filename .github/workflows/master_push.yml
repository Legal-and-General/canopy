name: Push to master

on:
  push:
    branches:
      - master
      - next
      - master-bm
    tags-ignore:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: 'Setup node'
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 'Install dependencies'
        run: npm ci

      - name: 'Build library'
        run: npm run build

      - name: 'Upload dist folder'
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ github.event.repository.name }}
          path: dist/canopy/
          overwrite: true

  release:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: 'Setup node'
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 'Install dependencies'
        run: npm ci

      - name: 'Download dist folder'
        uses: actions/download-artifact@v5
        with:
          name: ${{ github.event.repository.name }}
          path: dist/canopy/

      - name: 'Zip library'
        run: zip -r dist/canopy.zip dist/canopy

      - name: 'Release'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: [ build ]
    if: github.ref_name == 'master' || github.ref_name == 'master-bm'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: 'Setup node'
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 'Install dependencies'
        run: npm ci

      - name: 'Download dist folder'
        uses: actions/download-artifact@v5
        with:
          name: ${{ github.event.repository.name }}
          path: dist/canopy/

      - name: 'Build icons'
        run: npm run build:icons

      - name: 'Set Storybook output directory'
        run: echo "SB_OUTPUT_DIR=${{ endsWith(github.ref_name, '-bm') && './docs/lg-sb-master-bm' || './lg-sb-build' }}" >> $GITHUB_ENV

      - name: 'Build storybook'
        run: npm run build:storybook -- --output-dir $SB_OUTPUT_DIR

      - name: 'Set PERCY_TOKEN env var'
        run: echo "PERCY_TOKEN_NAME=${{ endsWith(github.ref_name, '-bm') && 'PERCY_TOKEN_BM' || 'PERCY_TOKEN' }}" >> $GITHUB_ENV

      - name: 'Update visual baselines'
        run: npx percy storybook $SB_OUTPUT_DIR --config=.percy.yml
        env:
          PERCY_TOKEN: ${{ secrets[env.PERCY_TOKEN_NAME] }}
          PERCY_BRANCH: '${{ github.ref_name }}'
          NETWORK_IDLE_WAIT_TIMEOUT: 5000

      - name: 'Deployment to GitHub Pages'
        uses: actions/github-script@v8
        with:
          script: |
            const deployBranch = require('./.github/workflow-scripts/gh-pages/deploy.js');
            await deployBranch({
              branch: '${{ github.ref_name }}',
              sha: '${{ github.sha }}',
              github,
              context,
              exec,
              core
            });
