"use strict";(self.webpackChunk_legal_and_general_canopy=self.webpackChunk_legal_and_general_canopy||[]).push([[3301],{"./projects/canopy/src/lib/button/button-toggle/button-toggle.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>LgButtonToggleDirective});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let LgButtonToggleDirective=class LgButtonToggleDirective{constructor(hostElement){if(this.hostElement=hostElement,this._isActive=!1,this.toggleActive=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter,this.class=!0,this.role="button","BUTTON"!==this.hostElement.nativeElement.tagName)throw Error("The `lgButtonToggle` directive should always be added to a button element. Please change the HTML tag accordingly")}get active(){return this._isActive}get idAttr(){return this.id}get ariaControlsAttr(){return this.ariaControls}onClick(){this.toggle()}toggle(){this._isActive=!this._isActive,this.toggleActive.emit(this._isActive)}get isActive(){return this._isActive}};LgButtonToggleDirective.ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef}],LgButtonToggleDirective.propDecorators={toggleActive:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output}],class:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["class.lg-btn-toggle"]}],role:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["role"]}],active:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["class.lg-btn-toggle--active"]},{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["attr.aria-expanded"]}],idAttr:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["id"]}],ariaControlsAttr:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["attr.aria-controls"]}],onClick:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,args:["click"]}]},LgButtonToggleDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({selector:"[lgButtonToggle]"})],LgButtonToggleDirective)},"./projects/canopy/src/lib/card/card.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>LgCardModule});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),router=__webpack_require__("./node_modules/@angular/router/fesm2020/router.mjs"),heading_module=__webpack_require__("./projects/canopy/src/lib/heading/heading.module.ts"),icons_interface=__webpack_require__("./projects/canopy/src/lib/icon/icons.interface.ts"),icon_registry=__webpack_require__("./projects/canopy/src/lib/icon/icon.registry.ts"),icon_module=__webpack_require__("./projects/canopy/src/lib/icon/icon.module.ts");let LgCardPrincipleDataPointDateComponent=class LgCardPrincipleDataPointDateComponent{constructor(){this.class=!0}};LgCardPrincipleDataPointDateComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-principle-data-point-date"]}]},LgCardPrincipleDataPointDateComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-principle-data-point-date",template:"<ng-content></ng-content>\n",encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-principle-data-point-date {\n  color: var(--card-principle-data-point-date-color);\n  display: block;\n  font-size: var(--text-fs-8-size);\n  line-height: var(--text-fs-8-line-height);\n  font-weight: var(--text-fs-8-weight);\n}"]})],LgCardPrincipleDataPointDateComponent);let LgCardPrincipleDataPointLabelComponent=class LgCardPrincipleDataPointLabelComponent{constructor(){this.class=!0}};LgCardPrincipleDataPointLabelComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-principle-data-point-label"]}]},LgCardPrincipleDataPointLabelComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-principle-data-point-label",template:"<ng-content></ng-content>\n",encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-principle-data-point-label {\n  color: var(--card-principle-data-point-label-color);\n  display: block;\n  font-weight: var(--font-weight-bold);\n}"]})],LgCardPrincipleDataPointLabelComponent);let LgCardPrincipleDataPointValueComponent=class LgCardPrincipleDataPointValueComponent{constructor(){this.class=!0}};LgCardPrincipleDataPointValueComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-principle-data-point-value"]}]},LgCardPrincipleDataPointValueComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-principle-data-point-value",template:"<ng-content></ng-content>\n",encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-principle-data-point-value {\n  font-size: var(--text-fs-6-size);\n  line-height: var(--text-fs-6-line-height);\n  font-weight: var(--text-fs-6-weight);\n  color: var(--card-principle-data-point-value-color);\n  display: block;\n  font-weight: var(--font-weight-thin);\n}"]})],LgCardPrincipleDataPointValueComponent);let LgCardPrincipleDataPointComponent=class LgCardPrincipleDataPointComponent{constructor(){this.class=!0}};LgCardPrincipleDataPointComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-principle-data-point"]}]},LgCardPrincipleDataPointComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-principle-data-point",template:"<ng-content></ng-content>\n",encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-principle-data-point {\n  display: block;\n}\n@media (min-width: 48rem) {\n  .lg-card-principle-data-point {\n    display: flex;\n    flex-direction: column;\n    text-align: right;\n    justify-content: flex-start;\n  }\n}"]})],LgCardPrincipleDataPointComponent);let LgCardContentComponent=class LgCardContentComponent{constructor(){this.class=!0}};LgCardContentComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-content"]}]},LgCardContentComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-content",template:"<ng-content></ng-content>\n",encapsulation:core.ViewEncapsulation.None})],LgCardContentComponent);let LgCardHeaderComponent=class LgCardHeaderComponent{constructor(){this.class=!0}};LgCardHeaderComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-header"]}]},LgCardHeaderComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-header",template:'<div class="lg-card-header__title">\n  <ng-content></ng-content>\n</div>\n',encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-header {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  border-bottom: solid var(--border-width) var(--card-title-border-color);\n  padding-bottom: var(--space-lg);\n  margin-bottom: var(--card-header-margin-bottom);\n}\n@media (min-width: 48rem) {\n  .lg-card-header {\n    flex-direction: row;\n  }\n}\n@media (min-width: 48rem) {\n  .lg-card-header__title {\n    flex: 1 1 0;\n    margin-right: var(--space-lg);\n  }\n}"]})],LgCardHeaderComponent);let LgCardSubtitleComponent=class LgCardSubtitleComponent{constructor(){this.class=!0}};LgCardSubtitleComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-subtitle"]}]},LgCardSubtitleComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-subtitle",template:"<ng-content></ng-content>\n",encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-subtitle {\n  display: block;\n  color: var(--card-title-color);\n  margin: var(--space-xxs) 0 var(--space-lg);\n}"]})],LgCardSubtitleComponent);let LgCardTitleComponent=class LgCardTitleComponent{constructor(){this.class=!0}};LgCardTitleComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-title"]}],headingLevel:[{type:core.Input}]},LgCardTitleComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-title",template:'<lg-heading [level]="headingLevel">\n  <ng-content></ng-content>\n</lg-heading>\n',encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-title {\n  color: var(--card-title-color);\n  display: block;\n}\n.lg-card-title h1,\n.lg-card-title h2,\n.lg-card-title h3,\n.lg-card-title h4,\n.lg-card-title h5,\n.lg-card-title h6 {\n  margin-bottom: 0;\n}\n.lg-card-title a {\n  text-decoration: underline;\n  border-bottom: 0;\n  padding: 0;\n  color: var(--link-color);\n  outline: none;\n  text-decoration: none;\n}\n.lg-card-title a:hover {\n  border-bottom: 0;\n  box-shadow: none;\n  background-color: transparent;\n  color: inherit;\n}\n.lg-card-title a:active, .lg-card-title a:focus-visible, .lg-card-title a:focus-visible:hover {\n  background-color: transparent;\n  color: inherit;\n}\n.lg-card-title a:focus-visible, .lg-card-title a:focus-visible:hover {\n  outline: 0 !important;\n  box-shadow: 0 0 0 var(--inner-focus-width) var(--default-inner-focus-color), 0 0 0 var(--outer-focus-width) var(--default-focus-color);\n}"]})],LgCardTitleComponent);var button_toggle_directive=__webpack_require__("./projects/canopy/src/lib/button/button-toggle/button-toggle.directive.ts");let LgCardToggableContentComponent=class LgCardToggableContentComponent{constructor(host){this.host=host,this.class=!0,this.role="region"}get tabindex(){return this.isActive?"-1":null}get activeClass(){return this.isActive&&this.host.nativeElement.focus(),!this.isActive}get ariaLabelledBy(){return`lg-card-toggle-${this.uniqueId}`}get id(){return`lg-card-panel-${this.uniqueId}`}onBlur(){this.host.nativeElement.removeAttribute("tabindex")}};LgCardToggableContentComponent.ctorParameters=()=>[{type:core.ElementRef}],LgCardToggableContentComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-toggable-content"]}],role:[{type:core.HostBinding,args:["role"]}],tabindex:[{type:core.HostBinding,args:["tabindex"]}],activeClass:[{type:core.HostBinding,args:["class.lg-card-toggable-content--hidden"]}],ariaLabelledBy:[{type:core.HostBinding,args:["attr.aria-labelledby"]}],id:[{type:core.HostBinding,args:["id"]}],onBlur:[{type:core.HostListener,args:["blur"]}]},LgCardToggableContentComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-toggable-content",template:"<ng-content></ng-content>\n",encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-toggable-content {\n  display: block;\n  margin: var(--space-md) 0;\n  padding: 0;\n  transition: all var(--animation-duration) var(--animation-fn);\n}\n.lg-card-toggable-content:focus-visible {\n  outline: 0 !important;\n  box-shadow: 0 0 0 var(--inner-focus-width) var(--default-inner-focus-color), 0 0 0 var(--outer-focus-width) var(--default-focus-color);\n  padding: var(--space-xxxs);\n}\n.lg-card-toggable-content--hidden {\n  display: none;\n}"]})],LgCardToggableContentComponent);let LgCardNavigationTitleComponent=class LgCardNavigationTitleComponent{constructor(){this.title="",this.link="",this.queryParams=null,this.queryParamsHandling=null,this.linkClickedEvent=new core.EventEmitter}ngOnInit(){this.headingLevel&&this.title&&this.link||console.error("headingLevel, title and link must be set")}ngOnChanges({link}){link?.currentValue&&(this.externalLink=function isExternalURL(url){try{return new URL(url).origin!==location.origin}catch{return!1}}(link?.currentValue))}linkClicked(){this.linkClickedEvent.emit()}};LgCardNavigationTitleComponent.propDecorators={headingLevel:[{type:core.Input}],title:[{type:core.Input}],link:[{type:core.Input}],queryParams:[{type:core.Input}],queryParamsHandling:[{type:core.Input}],linkClickedEvent:[{type:core.Output}]},LgCardNavigationTitleComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-navigation-title",template:'<lg-heading [level]="headingLevel" *ngIf="link && title && headingLevel">\n  <a *ngIf="externalLink" [href]="link" (click)="linkClicked()">\n    <ng-container [ngTemplateOutlet]="linkContent"></ng-container>\n  </a>\n  <a *ngIf="!externalLink" [routerLink]="[link]" [queryParams]="queryParams" [queryParamsHandling]="queryParamsHandling" (click)="linkClicked()">\n    <ng-container [ngTemplateOutlet]="linkContent"></ng-container>\n  </a>\n</lg-heading>\n\n<ng-template #linkContent>\n  {{title}}\n  <lg-icon name="arrow-right"></lg-icon>\n</ng-template>\n',encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,host:{class:"lg-card-navigation-title"},styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-navigation-title {\n  --card-active-focus-border-bottom-width: var(--space-xxxs);\n  width: 100%;\n}\n.lg-card-navigation-title h1,\n.lg-card-navigation-title h2,\n.lg-card-navigation-title h3,\n.lg-card-navigation-title h4,\n.lg-card-navigation-title h5,\n.lg-card-navigation-title h6 {\n  margin-bottom: calc(-1 * var(--card-header-margin-bottom));\n  font-size: var(--text-fs-3-size);\n}\n.lg-card-navigation-title .lg-icon {\n  margin-left: auto;\n  background: var(--link-color);\n  border-radius: 50%;\n  color: var(--color-white);\n}\n.lg-card-navigation-title a {\n  border-bottom: 0.125rem solid var(--link-color);\n  color: var(--link-color);\n  line-height: initial;\n  padding: 0 0.125rem;\n  text-decoration: none;\n  border-bottom: solid var(--border-width) var(--card-title-border-color);\n  padding: var(--card-navigation-link-padding-top) 0 var(--card-navigation-link-padding-bottom);\n  align-items: center;\n  display: flex;\n  font-weight: var(--font-weight-bold);\n  margin-left: calc(-1 * var(--component-padding));\n  margin-right: calc(-1 * var(--component-padding));\n  margin-top: var(--outer-focus-width);\n  padding-left: var(--component-padding);\n  padding-right: var(--component-padding);\n  padding-top: var(--card-navigation-link-padding-bottom);\n}\n.lg-card-navigation-title a:hover, .lg-card-navigation-title a:hover:visited {\n  color: var(--link-color);\n  border-bottom: 0;\n  box-shadow: inset 0 -0.063rem 0 0 var(--link-color), 0 0.188rem 0 0 var(--link-color);\n}\n.lg-card-navigation-title a:visited {\n  color: var(--link-visited-color);\n  border-color: var(--link-visited-color);\n}\n.lg-card-navigation-title a:active {\n  background-color: var(--link-active-bg-color);\n  border-bottom-color: var(--link-active-color);\n  color: var(--link-active-color);\n  outline: 0;\n}\n.lg-card-navigation-title a:focus-visible, .lg-card-navigation-title a:focus-visible:hover {\n  background-color: var(--link-focus-bg-color);\n  border-bottom: 0;\n  color: var(--link-focus-color);\n  outline: 0.063rem solid var(--link-focus-bg-color);\n  outline-offset: 0;\n}\n@media (min-width: 48rem) {\n  .lg-card-navigation-title a {\n    padding-top: var(--card-navigation-link-padding-top-md);\n  }\n}\n.lg-card-navigation-title a:visited {\n  border-color: var(--card-title-border-color);\n  color: var(--link-color);\n}\n.lg-card-navigation-title a:active {\n  background: transparent;\n  color: var(--link-active-color);\n  border-bottom: var(--card-active-focus-border-bottom-width) solid var(--link-active-color);\n}\n.lg-card-navigation-title a:active:hover {\n  border-bottom: 0;\n}\n.lg-card-navigation-title a:active .lg-icon {\n  background: var(--link-active-color);\n}\n.lg-card-navigation-title a:hover {\n  color: var(--link-color);\n  padding-bottom: calc(var(--card-navigation-link-padding-bottom) + var(--border-width));\n}\n.lg-card-navigation-title a:focus-visible, .lg-card-navigation-title a:focus-visible:hover {\n  background: transparent;\n  border-bottom: var(--card-active-focus-border-bottom-width) solid var(--link-active-color);\n  border-radius: calc(var(--border-radius-sm) / 2);\n  color: var(--link-active-color);\n  margin-left: calc(-1 * var(--component-padding) + var(--outer-focus-width));\n  margin-right: calc(-1 * var(--component-padding) + var(--outer-focus-width));\n  margin-top: var(--outer-focus-width);\n  padding-right: calc(var(--component-padding) - var(--outer-focus-width));\n  padding-left: calc(var(--component-padding) - var(--outer-focus-width));\n  padding-bottom: calc(var(--card-navigation-link-padding-bottom) + var(--border-width) - var(--card-active-focus-border-bottom-width));\n  outline: 0 !important;\n  box-shadow: 0 0 0 var(--inner-focus-width) var(--default-inner-focus-color), 0 0 0 var(--outer-focus-width) var(--default-focus-color);\n}\n.lg-card-navigation-title a:focus-visible .lg-icon, .lg-card-navigation-title a:active .lg-icon {\n  background: var(--link-active-color);\n}"]})],LgCardNavigationTitleComponent);let nextUniqueId=0,LgCardComponent=class LgCardComponent{constructor(){this.uniqueId=nextUniqueId++,this.variant="default"}get variantClass(){return`lg-card--${this.variant}`}ngAfterContentInit(){this.cardNavigationTitle&&(this.variant="navigation"),this.buttonToggle&&this.cardToggableContent&&(this.buttonToggle.id=`lg-card-toggle-${this.uniqueId}`,this.buttonToggle.ariaControls=`lg-card-panel-${this.uniqueId}`,this.cardToggableContent.uniqueId=this.uniqueId,this.subscription=this.buttonToggle.toggleActive.subscribe((isActive=>{this.cardToggableContent.isActive=isActive})))}ngOnDestroy(){this.subscription?.unsubscribe()}};LgCardComponent.propDecorators={buttonToggle:[{type:core.ContentChild,args:[(0,core.forwardRef)((()=>button_toggle_directive.A))]}],cardToggableContent:[{type:core.ContentChild,args:[(0,core.forwardRef)((()=>LgCardToggableContentComponent))]}],cardNavigationTitle:[{type:core.ContentChild,args:[(0,core.forwardRef)((()=>LgCardNavigationTitleComponent))]}],variant:[{type:core.Input}],variantClass:[{type:core.HostBinding,args:["class"]}]},LgCardComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card",template:'<ng-content select="lg-card-hero-img"></ng-content>\n<ng-content select="lg-card-header"></ng-content>\n<ng-content select="lg-card-content"></ng-content>\n<ng-content select="lg-card-footer"></ng-content>\n',encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,host:{class:"lg-card"},styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card {\n  display: block;\n  background-color: var(--card-bg-color);\n  border-radius: var(--border-radius-lg);\n  margin-bottom: var(--grid-gutter);\n  padding: var(--component-padding);\n}\n.lg-card--promotion {\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n.lg-card--promotion .lg-card-hero-img__img + .lg-card-content {\n  padding: var(--space-lg);\n  padding-top: var(--space-md);\n}\n.lg-card--navigation {\n  padding-top: 0;\n  transition: box-shadow 250ms;\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.01), 0 0.0625rem 0.0625rem 0 rgba(0, 0, 0, 0.02), 0 0.0625rem 0.125rem 0 rgba(0, 0, 0, 0.02), 0 0.125rem 0.25rem 0 rgba(0, 0, 0, 0.02), 0 0.1875rem 0.4375rem 0 rgba(0, 0, 0, 0.03), 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.04);\n}\n.lg-card--navigation:hover {\n  box-shadow: 0 0.0625rem 0.125rem 0 rgba(0, 0, 0, 0.02), 0 0.125rem 0.0125rem 0 rgba(0, 0, 0, 0.03), 0 0.25rem 0.625rem 0 rgba(0, 0, 0, 0.04), 0 0.4375rem 1.125rem 0 rgba(0, 0, 0, 0.04), 0 0.8125rem 2.0625rem 0 rgba(0, 0, 0, 0.05), 0 2rem 5rem 0 rgba(0, 0, 0, 0.07);\n}\n@media (min-width: 48rem) {\n  .lg-card--navigation .lg-card-header__title {\n    margin-right: 0;\n  }\n}\n.lg-card--navigation .lg-card-header {\n  border-bottom: none;\n}"]})],LgCardComponent);let LgCardFooterComponent=class LgCardFooterComponent{constructor(){this.class=!0}};LgCardFooterComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-footer"]}]},LgCardFooterComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-footer",template:"<ng-content></ng-content>\n",encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-footer {\n  display: block;\n  border-top: solid var(--border-width) var(--card-title-border-color);\n  padding-top: var(--space-lg);\n}"]})],LgCardFooterComponent);let LgCardContentInnerDataPointsComponent=class LgCardContentInnerDataPointsComponent{constructor(){this.class=!0}};LgCardContentInnerDataPointsComponent.propDecorators={class:[{type:core.HostBinding,args:["class.lg-card-content-inner-data-points"]}]},LgCardContentInnerDataPointsComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-content-inner-data-points",template:'<ng-content select="lg-data-point, lg-data-point-list"></ng-content>\n',encapsulation:core.ViewEncapsulation.None,styles:['.lg-card-content-inner-data-points {\n  display: grid;\n  grid-column-gap: var(--space-sm);\n  grid-template: "a a" "b c";\n}\n.lg-card-content-inner-data-points .lg-data-point-label {\n  font-weight: var(--font-weight-bold);\n}\n.lg-card-content-inner-data-points .lg-data-point-value {\n  font-weight: var(--font-weight-light);\n}\n.lg-card-content-inner-data-points > *:first-child {\n  grid-area: a;\n  margin-bottom: var(--space-xl);\n}\n.lg-card-content-inner-data-points > *:first-child .lg-data-point-value {\n  font-size: var(--text-fs-4-size);\n  line-height: var(--text-fs-4-line-height);\n}\n.lg-card-content-inner-data-points > *:nth-child(2):nth-last-child(1) .lg-data-point-value {\n  font-size: var(--text-fs-2-size);\n  line-height: var(--text-fs-2-line-height);\n}\n.lg-card-content-inner-data-points > *:nth-child(2):nth-last-child(2),\n.lg-card-content-inner-data-points > *:nth-child(3):nth-last-child(1) {\n  display: inline-flex;\n  margin-right: 0;\n  grid-area: 2;\n}\n.lg-card-content-inner-data-points > *:nth-child(2):nth-last-child(2) .lg-data-point-value,\n.lg-card-content-inner-data-points > *:nth-child(3):nth-last-child(1) .lg-data-point-value {\n  font-size: var(--text-fs-2-size);\n  line-height: var(--text-fs-2-line-height);\n}']})],LgCardContentInnerDataPointsComponent);let LgCardHeroImageComponent=class LgCardHeroImageComponent{constructor(){this.cover=!1,this.alt=""}get class(){return this.src?"lg-card-hero-img__img":"lg-card-hero-img__icon"}};LgCardHeroImageComponent.propDecorators={cover:[{type:core.Input}],src:[{type:core.Input}],alt:[{type:core.Input}],class:[{type:core.HostBinding,args:["class"]}]},LgCardHeroImageComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-card-hero-img",template:'<div\n  *ngIf="cover && src"\n  class="lg-card-hero-image__cover-image"\n  [style.background-image]="\'url(\' + src + \')\'"\n></div>\n<img\n  *ngIf="!cover && src"\n  [alt]="alt"\n  [src]="src"\n  class="lg-card-hero-image__img"\n/>\n<ng-content select="lg-brand-icon"></ng-content>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,encapsulation:core.ViewEncapsulation.None,styles:["/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-card-hero-image__cover-image {\n  width: 100%;\n  height: var(--card-hero-image-height);\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n}\n.lg-card-hero-image__img {\n  width: 100%;\n  height: 100%;\n}\n.lg-card--promotion .lg-card-hero-img__icon {\n  margin-bottom: var(--space-lg);\n}\n.lg-card--promotion.lg-orientation--sm--reverse-vertical .lg-card-hero-img__icon {\n  margin: var(--space-lg) 0 0 0;\n}\n.lg-card--promotion.lg-orientation--sm--horizontal .lg-card-hero-img__icon {\n  margin: 0 var(--space-lg) 0 0;\n}\n.lg-card--promotion.lg-orientation--sm--reverse-horizontal .lg-card-hero-img__icon {\n  margin: 0 0 0 var(--space-lg);\n}\n@media (min-width: 48rem) {\n  .lg-card--promotion.lg-orientation--md--vertical .lg-card-hero-img__icon {\n    margin: 0 0 var(--space-lg) 0;\n  }\n}\n@media (min-width: 48rem) {\n  .lg-card--promotion.lg-orientation--md--reverse-vertical .lg-card-hero-img__icon {\n    margin: var(--space-lg) 0 0 0;\n  }\n}\n@media (min-width: 48rem) {\n  .lg-card--promotion.lg-orientation--md--horizontal .lg-card-hero-img__icon {\n    margin: 0 var(--space-lg) 0 0;\n  }\n}\n@media (min-width: 48rem) {\n  .lg-card--promotion.lg-orientation--md--reverse-horizontal .lg-card-hero-img__icon {\n    margin: 0 0 0 var(--space-lg);\n  }\n}\n@media (min-width: 64rem) {\n  .lg-card--promotion.lg-orientation--lg--vertical .lg-card-hero-img__icon {\n    margin: 0 0 var(--space-lg) 0;\n  }\n}\n@media (min-width: 64rem) {\n  .lg-card--promotion.lg-orientation--lg--reverse-vertical .lg-card-hero-img__icon {\n    margin: var(--space-lg) 0 0 0;\n  }\n}\n@media (min-width: 64rem) {\n  .lg-card--promotion.lg-orientation--lg--horizontal .lg-card-hero-img__icon {\n    margin: 0 var(--space-lg) 0 0;\n  }\n}\n@media (min-width: 64rem) {\n  .lg-card--promotion.lg-orientation--lg--reverse-horizontal .lg-card-hero-img__icon {\n    margin: 0 0 0 var(--space-lg);\n  }\n}\n@media (min-width: 80rem) {\n  .lg-card--promotion.lg-orientation--xl--vertical .lg-card-hero-img__icon {\n    margin: 0 0 var(--space-lg) 0;\n  }\n}\n@media (min-width: 80rem) {\n  .lg-card--promotion.lg-orientation--xl--reverse-vertical .lg-card-hero-img__icon {\n    margin: var(--space-lg) 0 0 0;\n  }\n}\n@media (min-width: 80rem) {\n  .lg-card--promotion.lg-orientation--xl--horizontal .lg-card-hero-img__icon {\n    margin: 0 var(--space-lg) 0 0;\n  }\n}\n@media (min-width: 80rem) {\n  .lg-card--promotion.lg-orientation--xl--reverse-horizontal .lg-card-hero-img__icon {\n    margin: 0 0 0 var(--space-lg);\n  }\n}\n@media (min-width: 90rem) {\n  .lg-card--promotion.lg-orientation--xxl--vertical .lg-card-hero-img__icon {\n    margin: 0 0 var(--space-lg) 0;\n  }\n}\n@media (min-width: 90rem) {\n  .lg-card--promotion.lg-orientation--xxl--reverse-vertical .lg-card-hero-img__icon {\n    margin: var(--space-lg) 0 0 0;\n  }\n}\n@media (min-width: 90rem) {\n  .lg-card--promotion.lg-orientation--xxl--horizontal .lg-card-hero-img__icon {\n    margin: 0 var(--space-lg) 0 0;\n  }\n}\n@media (min-width: 90rem) {\n  .lg-card--promotion.lg-orientation--xxl--reverse-horizontal .lg-card-hero-img__icon {\n    margin: 0 0 0 var(--space-lg);\n  }\n}\n@media (min-width: 48rem) {\n  .lg-orientation.lg-orientation--md--vertical .lg-card-hero-image__cover-image, .lg-orientation.lg-orientation--md--reverse-vertical .lg-card-hero-image__cover-image {\n    width: 100%;\n    height: var(--card-hero-image-height);\n  }\n}\n@media (min-width: 48rem) {\n  .lg-orientation.lg-orientation--md--horizontal .lg-card-hero-image__cover-image, .lg-orientation.lg-orientation--md--reverse-horizontal .lg-card-hero-image__cover-image {\n    width: var(--card-hero-image-width);\n    height: 100%;\n  }\n}\n@media (min-width: 64rem) {\n  .lg-orientation.lg-orientation--lg--vertical .lg-card-hero-image__cover-image, .lg-orientation.lg-orientation--lg--reverse-vertical .lg-card-hero-image__cover-image {\n    width: 100%;\n    height: var(--card-hero-image-height);\n  }\n}\n@media (min-width: 64rem) {\n  .lg-orientation.lg-orientation--lg--horizontal .lg-card-hero-image__cover-image, .lg-orientation.lg-orientation--lg--reverse-horizontal .lg-card-hero-image__cover-image {\n    width: var(--card-hero-image-width);\n    height: 100%;\n  }\n}\n@media (min-width: 80rem) {\n  .lg-orientation.lg-orientation--xl--vertical .lg-card-hero-image__cover-image, .lg-orientation.lg-orientation--xl--reverse-vertical .lg-card-hero-image__cover-image {\n    width: 100%;\n    height: var(--card-hero-image-height);\n  }\n}\n@media (min-width: 80rem) {\n  .lg-orientation.lg-orientation--xl--horizontal .lg-card-hero-image__cover-image, .lg-orientation.lg-orientation--xl--reverse-horizontal .lg-card-hero-image__cover-image {\n    width: var(--card-hero-image-width);\n    height: 100%;\n  }\n}\n@media (min-width: 90rem) {\n  .lg-orientation.lg-orientation--xxl--vertical .lg-card-hero-image__cover-image, .lg-orientation.lg-orientation--xxl--reverse-vertical .lg-card-hero-image__cover-image {\n    width: 100%;\n    height: var(--card-hero-image-height);\n  }\n}\n@media (min-width: 90rem) {\n  .lg-orientation.lg-orientation--xxl--horizontal .lg-card-hero-image__cover-image, .lg-orientation.lg-orientation--xxl--reverse-horizontal .lg-card-hero-image__cover-image {\n    width: var(--card-hero-image-width);\n    height: 100%;\n  }\n}"]})],LgCardHeroImageComponent);const components=[LgCardComponent,LgCardHeaderComponent,LgCardHeroImageComponent,LgCardTitleComponent,LgCardFooterComponent,LgCardSubtitleComponent,LgCardPrincipleDataPointComponent,LgCardPrincipleDataPointLabelComponent,LgCardPrincipleDataPointValueComponent,LgCardPrincipleDataPointDateComponent,LgCardContentComponent,LgCardContentInnerDataPointsComponent,LgCardToggableContentComponent,LgCardNavigationTitleComponent];let LgCardModule=class LgCardModule{constructor(iconRegistry){this.iconRegistry=iconRegistry,this.iconRegistry.registerIcons([icons_interface.lgIconArrowRight])}};LgCardModule.ctorParameters=()=>[{type:icon_registry.v}],LgCardModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,heading_module.T,icon_module.r,router.yS],declarations:[components],exports:[components]})],LgCardModule)},"./projects/canopy/src/lib/heading/heading.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>LgHeadingComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let LgHeadingComponent=class LgHeadingComponent{};LgHeadingComponent.propDecorators={level:[{type:core.Input}]},LgHeadingComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"lg-heading",template:'\x3c!--https://github.com/angular/angular/issues/7795--\x3e\n\n<ng-template #transclude><ng-content></ng-content></ng-template>\n\n<h1 *ngIf="+level === 1">\n  <ng-container *ngTemplateOutlet="transclude"></ng-container>\n</h1>\n<h2 *ngIf="+level === 2">\n  <ng-container *ngTemplateOutlet="transclude"></ng-container>\n</h2>\n<h3 *ngIf="+level === 3">\n  <ng-container *ngTemplateOutlet="transclude"></ng-container>\n</h3>\n<h4 *ngIf="+level === 4">\n  <ng-container *ngTemplateOutlet="transclude"></ng-container>\n</h4>\n<h5 *ngIf="+level === 5">\n  <ng-container *ngTemplateOutlet="transclude"></ng-container>\n</h5>\n<h6 *ngIf="+level === 6">\n  <ng-container *ngTemplateOutlet="transclude"></ng-container>\n</h6>\n',encapsulation:core.ViewEncapsulation.None,host:{class:"lg-heading"},styles:[".lg-heading[class*=lg-margin],\n.lg-heading[class*=lg-padding] {\n  display: block;\n}\n.lg-heading[class*=lg-margin] > h1,\n.lg-heading[class*=lg-margin] h2,\n.lg-heading[class*=lg-margin] h3,\n.lg-heading[class*=lg-margin] h4,\n.lg-heading[class*=lg-margin] h5,\n.lg-heading[class*=lg-margin] h6,\n.lg-heading[class*=lg-padding] > h1,\n.lg-heading[class*=lg-padding] h2,\n.lg-heading[class*=lg-padding] h3,\n.lg-heading[class*=lg-padding] h4,\n.lg-heading[class*=lg-padding] h5,\n.lg-heading[class*=lg-padding] h6 {\n  margin: 0;\n}"]})],LgHeadingComponent)},"./projects/canopy/src/lib/heading/heading.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>LgHeadingModule});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_heading_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./projects/canopy/src/lib/heading/heading.component.ts");let LgHeadingModule=class LgHeadingModule{};LgHeadingModule=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule],declarations:[_heading_component__WEBPACK_IMPORTED_MODULE_3__.N],exports:[_heading_component__WEBPACK_IMPORTED_MODULE_3__.N]})],LgHeadingModule)},"./projects/canopy/src/lib/icon/icon.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>LgIconModule});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_icon_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./projects/canopy/src/lib/icon/icon.component.ts");let LgIconModule=class LgIconModule{};LgIconModule=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule],declarations:[_icon_component__WEBPACK_IMPORTED_MODULE_3__.r],exports:[_icon_component__WEBPACK_IMPORTED_MODULE_3__.r]})],LgIconModule)}}]);