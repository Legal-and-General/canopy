"use strict";(self.webpackChunk_legal_and_general_canopy=self.webpackChunk_legal_and_general_canopy||[]).push([[33823],{"./projects/canopy/src/lib/alert/docs/alert.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,standardAlert:()=>standardAlert});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_alert_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/canopy/src/lib/alert/alert.component.ts");const variantTypes=["generic","info","success","warning","error"],__WEBPACK_DEFAULT_EXPORT__={title:"Components/Inline message (Alert)/Examples",component:_alert_component__WEBPACK_IMPORTED_MODULE_1__.N,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_alert_component__WEBPACK_IMPORTED_MODULE_1__.N]})],argTypes:{content:{description:"The projected content."},showIcon:{description:"Whether the icon should display on the warning, error or success variants.",table:{type:{summary:"boolean"},defaultValue:{summary:!0}}},variant:{options:variantTypes,description:"Applies colour treatment and ARIA role if applicable.",table:{type:{summary:variantTypes},defaultValue:{summary:"generic"}},control:{type:"select"}},role:{description:"The ARIA role for the alert.",defaultValue:""},class:{table:{disable:!0}}}},template='\n<lg-alert\n  [showIcon]="showIcon"\n  [variant]="variant"\n  [role]="role"\n>\n  {{content}} Here is some <a href="#"> link text</a>.\n</lg-alert>\n',standardAlert=(args=>({props:args,template})).bind({});standardAlert.storyName="Inline message",standardAlert.args={content:"This is an inline message.",variant:"generic"},standardAlert.parameters={docs:{source:{code:template}}},standardAlert.parameters={...standardAlert.parameters,docs:{...standardAlert.parameters?.docs,source:{originalSource:"(args: LgAlertComponent) => ({\n  props: args,\n  template\n})",...standardAlert.parameters?.docs?.source}}};const __namedExportsOrder=["standardAlert"]}}]);