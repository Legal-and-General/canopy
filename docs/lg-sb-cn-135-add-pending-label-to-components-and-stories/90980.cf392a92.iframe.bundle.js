(self.webpackChunk_legal_and_general_canopy=self.webpackChunk_legal_and_general_canopy||[]).push([[90980],{"./projects/canopy/src/lib/list/docs/lists.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ColouredListWithIcons:()=>ColouredListWithIcons,DarkForegroundListWithIcons:()=>DarkForegroundListWithIcons,LightForegroundListWithIcons:()=>LightForegroundListWithIcons,NeutralForegroundListWithIcons:()=>NeutralForegroundListWithIcons,OrderedListWithNumerals:()=>OrderedListWithNumerals,__namedExportsOrder:()=>__namedExportsOrder,default:()=>docs_lists_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),lists_stories=__webpack_require__("./projects/canopy/src/lib/list/docs/lists.stories.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICBwYWRkaW5nOiB2YXIoLS1zcGFjZS1zbSk7CiAgICAgIH0KICAgIA%3D%3D!./projects/canopy/src/lib/list/docs/lists.stories.ts"),lists_stories_default=__webpack_require__.n(lists_stories),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_Dx7dWex5=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-Dx7dWex5.mjs"),list_with_icons_componentngResource=__webpack_require__("./projects/canopy/src/lib/list/list-with-icons.component.scss?ngResource"),list_with_icons_componentngResource_default=__webpack_require__.n(list_with_icons_componentngResource);let LgListWithIconsComponent=class LgListWithIconsComponent{set variant(variant){this._variant&&this.renderer.removeClass(this.hostElement.nativeElement,`lg-list-with-icons--${this.variant}`),variant&&this.renderer.addClass(this.hostElement.nativeElement,`lg-list-with-icons--${variant}`),this._variant=variant}get variant(){return this._variant}constructor(hostElement,renderer){this.hostElement=hostElement,this.renderer=renderer}ngAfterContentInit(){this.variant=this.variant||"neutral-foreground",this.nestedListWithIconsComponents.forEach((nestedListWithIconsComponent=>{nestedListWithIconsComponent.variant=this.variant}))}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}]}static{this.propDecorators={variant:[{type:core.Input}],nestedListWithIconsComponents:[{type:core.ContentChildren,args:[(0,core.forwardRef)((()=>LgListWithIconsComponent)),{descendants:!0}]}]}}};LgListWithIconsComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"[lg-list-with-icons]",template:'<ng-content select="[lg-list-with-icons-item]"></ng-content>',encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,host:{class:"lg-list-with-icons"},standalone:!0,styles:[list_with_icons_componentngResource_default()]})],LgListWithIconsComponent);var list_with_icons_item_componentngResource=__webpack_require__("./projects/canopy/src/lib/list/list-with-icons-item/list-with-icons-item.component.scss?ngResource"),list_with_icons_item_componentngResource_default=__webpack_require__.n(list_with_icons_item_componentngResource),icon_component=__webpack_require__("./projects/canopy/src/lib/icon/icon.component.ts");let LgListWithIconsItemComponent=class LgListWithIconsItemComponent{constructor(hostElement){this.hostElement=hostElement}ngAfterViewInit(){this.updateIconColour(this.iconColour)}ngOnChanges({iconColour}){iconColour&&this.updateIconColour(iconColour.currentValue)}updateIconColour(colour){const el=this.hostElement.nativeElement.getElementsByTagName("lg-icon")[0];if(el){const isCssVar=colour?.startsWith("--");el.style.color=isCssVar?`var(${colour})`:colour}}static{this.ctorParameters=()=>[{type:core.ElementRef}]}static{this.propDecorators={iconName:[{type:core.Input}],iconColour:[{type:core.Input}]}}};LgListWithIconsItemComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"[lg-list-with-icons-item]",template:'<lg-icon [name]="iconName"></lg-icon>\n<div class="lg-list-with-icons-item__content">\n  <ng-content></ng-content>\n</div>\n',encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,host:{class:"lg-list-with-icons-item"},imports:[icon_component.A],styles:[list_with_icons_item_componentngResource_default()]})],LgListWithIconsItemComponent);let LgListWithExpressiveStylingDirective=class LgListWithExpressiveStylingDirective{constructor(){this.class=!0}static{this.propDecorators={class:[{type:core.HostBinding,args:["class.lg-expressive-list"]}]}}};LgListWithExpressiveStylingDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[lgListWithExpressiveStyling]",standalone:!0})],LgListWithExpressiveStylingDirective);let ListWithIconsWrapperComponent=class ListWithIconsWrapperComponent{get bgColour(){switch(this.variant){case"dark-foreground":return"var(--colour-yellow-600)";case"light-foreground":return"var(--colour-blue-600)";default:return"var(--colour-greyscale-0)"}}static{this.propDecorators={variant:[{type:core.Input}],listItems:[{type:core.Input}],colouredIcons:[{type:core.Input}],bgColour:[{type:core.HostBinding,args:["style.background-color"]}]}}};ListWithIconsWrapperComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"lg-list-with-icons-wrapper",template:'\n<ul lg-list-with-icons [variant]="variant">\n  <li lg-list-with-icons-item *ngFor="let item of listItems" [iconName]="item.iconName" [iconColour]="colouredIcons ? item.iconColour : null"\n  ><ng-container [ngTemplateOutlet]="item.isLink ? linkText : text" [ngTemplateOutletContext]="{text: item.text}"></ng-container>\n    <ul lg-list-with-icons *ngIf="item.children as children">\n      <li lg-list-with-icons-item *ngFor="let child of children" [iconName]="child.iconName" [iconColour]="colouredIcons ? child.iconColour : null"\n      ><ng-container [ngTemplateOutlet]="child.isLink ? linkText : text" [ngTemplateOutletContext]="{text: child.text}"></ng-container>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<ng-template #text let-text="text">{{ text }}</ng-template>\n<ng-template #linkText let-text="text"><a href="#">{{ text }}</a></ng-template>\n',standalone:!0,imports:[LgListWithIconsComponent,LgListWithIconsItemComponent,common_module_Dx7dWex5.Sq,common_module_Dx7dWex5.bT,common_module_Dx7dWex5.T3],styles:[lists_stories_default()]})],ListWithIconsWrapperComponent);const docs_lists_stories={title:"Components/List/Examples",tags:["pending"],decorators:[(0,dist.Iz)({imports:[ListWithIconsWrapperComponent,LgListWithExpressiveStylingDirective]})],parameters:{backgrounds:{disable:!0}},argTypes:{colouredIcons:{description:"Shows an example of coloured icons"},variant:{table:{disable:!0}},class:{table:{disable:!0}}}};const ColouredListWithIcons={name:"[Internal] Coloured icons",render:args=>({props:args,template:'<lg-list-with-icons-wrapper [listItems]="listItems" [variant]="variant" [colouredIcons]="colouredIcons"></lg-list-with-icons-wrapper>'}),args:{listItems:[{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 1"},{iconName:"close",iconColour:"--colour-red-800",text:"List item 2"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3",children:[{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3.1"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3.2",isLink:!0}]},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 4"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 5",isLink:!0}],colouredIcons:!0},tags:["!dev"]},NeutralForegroundListWithIcons={name:"List with icons - Neutral foreground",render:args=>({props:args,template:'<lg-list-with-icons-wrapper [listItems]="listItems" [variant]="variant" [colouredIcons]="colouredIcons"></lg-list-with-icons-wrapper>'}),args:{listItems:[{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 1"},{iconName:"close",iconColour:"--colour-red-800",text:"List item 2"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3",children:[{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3.1"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3.2",isLink:!0}]},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 4"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 5",isLink:!0}],colouredIcons:!1},parameters:{docs:{source:{code:'\n          <ul lg-list-with-icons>\n            <li lg-list-with-icons-item iconName="checkmark">List item 1</li>\n            <li lg-list-with-icons-item iconName="checkmark">List item 2</li>\n            <li lg-list-with-icons-item iconName="close">List item 3</li>\n          </ul>\n        '}}}},DarkForegroundListWithIcons={name:"List with icons - Dark foreground",render:args=>({props:args,template:'<lg-list-with-icons-wrapper [listItems]="listItems" [variant]="variant" [colouredIcons]="colouredIcons"></lg-list-with-icons-wrapper>'}),args:{variant:"dark-foreground",listItems:[{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 1"},{iconName:"close",iconColour:"--colour-red-800",text:"List item 2"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3",children:[{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3.1"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3.2",isLink:!0}]},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 4"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 5",isLink:!0}],colouredIcons:!1},parameters:{docs:{source:{code:'\n          <ul lg-list-with-icons variant="dark-foreground">\n            <li lg-list-with-icons-item iconName="help">List item 1</li>\n            <li lg-list-with-icons-item iconName="idea">List item 2</li>\n            <li lg-list-with-icons-item iconName="house">List item 3</li>\n          </ul>\n        '}}}},LightForegroundListWithIcons={name:"List with icons - Light foreground",render:args=>({props:args,template:'<lg-list-with-icons-wrapper [listItems]="listItems" [variant]="variant" [colouredIcons]="colouredIcons"></lg-list-with-icons-wrapper>'}),args:{variant:"light-foreground",listItems:[{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 1"},{iconName:"close",iconColour:"--colour-red-800",text:"List item 2"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3",children:[{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3.1"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 3.2",isLink:!0}]},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 4"},{iconName:"checkmark",iconColour:"--colour-green-600",text:"List item 5",isLink:!0}],colouredIcons:!1},argTypes:{colouredIcons:{table:{disable:!0}}},parameters:{docs:{source:{code:'\n          <ul lg-list-with-icons variant="light-foreground">\n            <li lg-list-with-icons-item iconName="doc">List item 1</li>\n            <li lg-list-with-icons-item iconName="doc">List item 2</li>\n            <li lg-list-with-icons-item iconName="doc">List item 3</li>\n          </ul>\n        '}}}},OrderedListWithNumerals={name:"Ordered list with expressive styling",render:args=>({props:args,template:"\n      <ol lgListWithExpressiveStyling>\n        <li>Item 1</li>\n        <li>Item 2</li>\n        <li>Item 3</li>\n        <li>Item 4</li>\n        <li>Item 5</li>\n        <li>Item 6</li>\n        <li>Item 7</li>\n        <li>Item 8</li>\n        <li>Item 9</li>\n        <li>Item 10</li>\n      </ol>\n    "}),argTypes:{colouredIcons:{table:{disable:!0}}}},__namedExportsOrder=["ColouredListWithIcons","NeutralForegroundListWithIcons","DarkForegroundListWithIcons","LightForegroundListWithIcons","OrderedListWithNumerals"];ColouredListWithIcons.parameters={...ColouredListWithIcons.parameters,docs:{...ColouredListWithIcons.parameters?.docs,source:{originalSource:"{\n  name: '[Internal] Coloured icons',\n  render: (args: ListWithIconsWrapperComponent) => ({\n    props: args,\n    template: '<lg-list-with-icons-wrapper [listItems]=\"listItems\" [variant]=\"variant\" [colouredIcons]=\"colouredIcons\"></lg-list-with-icons-wrapper>'\n  }),\n  args: {\n    listItems: getDefaultList(),\n    colouredIcons: true\n  },\n  // !dev tag removes a story/component from the sidebar (See: https://github.com/storybookjs/storybook/pull/26634)\n  tags: ['!dev']\n}",...ColouredListWithIcons.parameters?.docs?.source}}},NeutralForegroundListWithIcons.parameters={...NeutralForegroundListWithIcons.parameters,docs:{...NeutralForegroundListWithIcons.parameters?.docs,source:{originalSource:'{\n  name: \'List with icons - Neutral foreground\',\n  render: (args: ListWithIconsWrapperComponent) => ({\n    props: args,\n    template: \'<lg-list-with-icons-wrapper [listItems]="listItems" [variant]="variant" [colouredIcons]="colouredIcons"></lg-list-with-icons-wrapper>\'\n  }),\n  args: {\n    listItems: getDefaultList(),\n    colouredIcons: false\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n          <ul lg-list-with-icons>\n            <li lg-list-with-icons-item iconName="checkmark">List item 1</li>\n            <li lg-list-with-icons-item iconName="checkmark">List item 2</li>\n            <li lg-list-with-icons-item iconName="close">List item 3</li>\n          </ul>\n        `\n      }\n    }\n  }\n}',...NeutralForegroundListWithIcons.parameters?.docs?.source}}},DarkForegroundListWithIcons.parameters={...DarkForegroundListWithIcons.parameters,docs:{...DarkForegroundListWithIcons.parameters?.docs,source:{originalSource:'{\n  name: \'List with icons - Dark foreground\',\n  render: (args: ListWithIconsWrapperComponent) => ({\n    props: args,\n    template: \'<lg-list-with-icons-wrapper [listItems]="listItems" [variant]="variant" [colouredIcons]="colouredIcons"></lg-list-with-icons-wrapper>\'\n  }),\n  args: {\n    variant: \'dark-foreground\',\n    listItems: getDefaultList(),\n    colouredIcons: false\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n          <ul lg-list-with-icons variant="dark-foreground">\n            <li lg-list-with-icons-item iconName="help">List item 1</li>\n            <li lg-list-with-icons-item iconName="idea">List item 2</li>\n            <li lg-list-with-icons-item iconName="house">List item 3</li>\n          </ul>\n        `\n      }\n    }\n  }\n}',...DarkForegroundListWithIcons.parameters?.docs?.source}}},LightForegroundListWithIcons.parameters={...LightForegroundListWithIcons.parameters,docs:{...LightForegroundListWithIcons.parameters?.docs,source:{originalSource:'{\n  name: \'List with icons - Light foreground\',\n  render: (args: ListWithIconsWrapperComponent) => ({\n    props: args,\n    template: \'<lg-list-with-icons-wrapper [listItems]="listItems" [variant]="variant" [colouredIcons]="colouredIcons"></lg-list-with-icons-wrapper>\'\n  }),\n  args: {\n    variant: \'light-foreground\',\n    listItems: getDefaultList(),\n    colouredIcons: false\n  },\n  argTypes: {\n    colouredIcons: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n          <ul lg-list-with-icons variant="light-foreground">\n            <li lg-list-with-icons-item iconName="doc">List item 1</li>\n            <li lg-list-with-icons-item iconName="doc">List item 2</li>\n            <li lg-list-with-icons-item iconName="doc">List item 3</li>\n          </ul>\n        `\n      }\n    }\n  }\n}',...LightForegroundListWithIcons.parameters?.docs?.source}}},OrderedListWithNumerals.parameters={...OrderedListWithNumerals.parameters,docs:{...OrderedListWithNumerals.parameters?.docs,source:{originalSource:"{\n  name: 'Ordered list with expressive styling',\n  render: (args: ListWithIconsWrapperComponent) => ({\n    props: args,\n    template: `\n      <ol lgListWithExpressiveStyling>\n        <li>Item 1</li>\n        <li>Item 2</li>\n        <li>Item 3</li>\n        <li>Item 4</li>\n        <li>Item 5</li>\n        <li>Item 6</li>\n        <li>Item 7</li>\n        <li>Item 8</li>\n        <li>Item 9</li>\n        <li>Item 10</li>\n      </ol>\n    `\n  }),\n  argTypes: {\n    colouredIcons: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}",...OrderedListWithNumerals.parameters?.docs?.source}}}},"./projects/canopy/src/lib/list/docs/lists.stories.ts.css?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICBwYWRkaW5nOiB2YXIoLS1zcGFjZS1zbSk7CiAgICAgIH0KICAgIA%3D%3D!./projects/canopy/src/lib/list/docs/lists.stories.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n      :host {\n        display: block;\n        padding: var(--space-sm);\n      }\n    ",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/canopy/src/lib/list/list-with-icons-item/list-with-icons-item.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-list-with-icons-item {\n  display: list-item;\n  display: flex;\n  list-style: none;\n  margin-top: var(--space-sm);\n  margin-left: 0;\n}\n.lg-list-with-icons-item:first-child {\n  margin-top: 0;\n}\n.lg-list-with-icons-item .lg-icon {\n  margin-right: var(--space-sm);\n  height: 1.5em;\n  width: 1.5em;\n  min-width: 1.5em;\n  vertical-align: bottom;\n}\n.lg-list-with-icons-item .lg-list-with-icons > .lg-list-with-icons-item {\n  margin-top: var(--space-sm);\n  margin-left: calc(var(--space-md) * -1);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/canopy/src/lib/list/list-with-icons.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-list-with-icons {\n  margin-left: 0;\n}\n.lg-list-with-icons .lg-list-with-icons {\n  margin-bottom: 0;\n}\n.lg-list-with-icons--neutral-foreground {\n  color: var(--text-default);\n}\n.lg-list-with-icons--dark-foreground {\n  color: var(--text-default);\n}\n.lg-list-with-icons--dark-foreground a {\n  border-bottom: 0.125rem solid var(--dark-foreground-link-color);\n  color: var(--dark-foreground-link-color);\n  line-height: initial;\n  padding: 0 0.125rem;\n  text-decoration: none;\n}\n.lg-list-with-icons--dark-foreground a:hover, .lg-list-with-icons--dark-foreground a:hover:visited {\n  color: var(--dark-foreground-link-hover-color);\n  border-bottom: 0;\n  box-shadow: inset 0 -0.063rem 0 0 var(--dark-foreground-link-hover-color), 0 0.188rem 0 0 var(--dark-foreground-link-hover-color);\n}\n.lg-list-with-icons--dark-foreground a:visited {\n  color: var(--dark-foreground-link-visited-color);\n  border-color: var(--dark-foreground-link-visited-color);\n}\n.lg-list-with-icons--dark-foreground a:active {\n  background-color: var(--dark-foreground-link-active-bg-color);\n  border-bottom-color: var(--dark-foreground-link-active-color);\n  color: var(--dark-foreground-link-active-color);\n  outline: 0;\n}\n.lg-list-with-icons--dark-foreground a:focus-visible, .lg-list-with-icons--dark-foreground a:focus-visible:hover {\n  background-color: var(--dark-foreground-link-focus-bg-color);\n  border-bottom: 0;\n  color: var(--dark-foreground-link-focus-color);\n  outline: 0.063rem solid var(--dark-foreground-link-focus-bg-color);\n  outline-offset: 0;\n}\n.lg-list-with-icons--light-foreground {\n  color: var(--colour-greyscale-0);\n}\n.lg-list-with-icons--light-foreground a {\n  border-bottom: 0.125rem solid var(--light-foreground-link-color);\n  color: var(--light-foreground-link-color);\n  line-height: initial;\n  padding: 0 0.125rem;\n  text-decoration: none;\n}\n.lg-list-with-icons--light-foreground a:hover, .lg-list-with-icons--light-foreground a:hover:visited {\n  color: var(--light-foreground-link-hover-color);\n  border-bottom: 0;\n  box-shadow: inset 0 -0.063rem 0 0 var(--light-foreground-link-hover-color), 0 0.188rem 0 0 var(--light-foreground-link-hover-color);\n}\n.lg-list-with-icons--light-foreground a:visited {\n  color: var(--light-foreground-link-visited-color);\n  border-color: var(--light-foreground-link-visited-color);\n}\n.lg-list-with-icons--light-foreground a:active {\n  background-color: var(--light-foreground-link-active-bg-color);\n  border-bottom-color: var(--light-foreground-link-active-color);\n  color: var(--light-foreground-link-active-color);\n  outline: 0;\n}\n.lg-list-with-icons--light-foreground a:focus-visible, .lg-list-with-icons--light-foreground a:focus-visible:hover {\n  background-color: var(--light-foreground-link-focus-bg-color);\n  border-bottom: 0;\n  color: var(--light-foreground-link-focus-color);\n  outline: 0.063rem solid var(--light-foreground-link-focus-bg-color);\n  outline-offset: 0;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);