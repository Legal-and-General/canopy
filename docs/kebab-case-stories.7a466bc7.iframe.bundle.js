"use strict";(self.webpackChunk_legal_and_general_canopy=self.webpackChunk_legal_and_general_canopy||[]).push([[94111],{"./node_modules/@storybook/angular/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Iz:()=>moduleMetadata});__webpack_require__("./node_modules/@storybook/angular/dist/client/globals.mjs"),__webpack_require__("storybook/preview-api"),__webpack_require__("./node_modules/@storybook/angular/dist/client/render.mjs");__webpack_require__("./node_modules/@storybook/angular/dist/client/angular-beta/ComputesTemplateFromComponent.mjs"),__webpack_require__("./node_modules/@storybook/angular/dist/client/angular-beta/utils/NgComponentAnalyzer.mjs");const moduleMetadata=metadata=>storyFn=>{const story=storyFn(),storyMetadata=story.moduleMetadata||{};return metadata=metadata||{},{...story,moduleMetadata:{declarations:[...metadata.declarations||[],...storyMetadata.declarations||[]],entryComponents:[...metadata.entryComponents||[],...storyMetadata.entryComponents||[]],imports:[...metadata.imports||[],...storyMetadata.imports||[]],schemas:[...metadata.schemas||[],...storyMetadata.schemas||[]],providers:[...metadata.providers||[],...storyMetadata.providers||[]]}}}},"./projects/canopy/src/lib/pipes/kebab-case/docs/kebab-case.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{KebabCasePipeStory:()=>KebabCasePipeStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>kebab_case_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),debug_node=__webpack_require__("./node_modules/@angular/core/fesm2022/debug_node.mjs");let LgKebabCasePipe=class LgKebabCasePipe{transform(str){return str?str.replace(/[_\-|]{1,}/g," ").replace(/([a-z])([A-Z])/g,(match,group1,group2)=>`${group1} ${group2.toLowerCase()}`).trim().replace(/ +/g,"-").toLowerCase():str}};LgKebabCasePipe=(0,tslib_es6.Cg)([(0,debug_node.nT_)({name:"kebabCase",standalone:!0})],LgKebabCasePipe);const kebab_case_stories={title:"Helpers/Pipes/Kebab case/Examples",decorators:[(0,dist.Iz)({imports:[LgKebabCasePipe]})],argTypes:{text:{description:"Text to transform into kebab case."},transform:{table:{disable:!0}}}},template="<p>{{text | kebabCase}}</p>",KebabCasePipeStory={name:"Kebab case",render:args=>({props:args,template}),args:{text:"Kebab case me"},parameters:{docs:{source:{code:template}}}},__namedExportsOrder=["KebabCasePipeStory"];KebabCasePipeStory.parameters={...KebabCasePipeStory.parameters,docs:{...KebabCasePipeStory.parameters?.docs,source:{originalSource:"{\n  name: 'Kebab case',\n  render: (args: LgKebabCasePipe) => ({\n    props: args,\n    template\n  }),\n  args: {\n    text: 'Kebab case me'\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: template\n      }\n    }\n  }\n}",...KebabCasePipeStory.parameters?.docs?.source}}}}}]);