"use strict";(self.webpackChunk_legal_and_general_canopy=self.webpackChunk_legal_and_general_canopy||[]).push([[3979],{"./projects/canopy/src/lib/spacing/margin/docs/margin.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,margin:()=>margin});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_card__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/canopy/src/lib/card/card.module.ts"),_margin_module__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/canopy/src/lib/spacing/margin/margin.module.ts");const spaces=["undefined","none","xxxs","xxs","xs","sm","md","lg","xl","xxl","xxxl","xxxxl"],__WEBPACK_DEFAULT_EXPORT__={title:"Helpers/Directives/Margin/Examples",decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_margin_module__WEBPACK_IMPORTED_MODULE_1__.c,_card__WEBPACK_IMPORTED_MODULE_2__.E]})],parameters:{a11y:{disable:!0},backgrounds:{default:"Super Blue"}},argTypes:{margin:{options:spaces,table:{category:"Standard"},control:{type:"select"}},marginTop:{options:spaces,table:{category:"Standard"},control:{type:"select"}},marginRight:{options:spaces,table:{category:"Standard"},control:{type:"select"}},marginBottom:{options:spaces,table:{category:"Standard"},control:{type:"select"}},marginLeft:{options:spaces,table:{category:"Standard"},control:{type:"select"}},marginResponsive:{name:"margin",table:{category:"Responsive"}},marginTopResponsive:{name:"marginTop",table:{category:"Responsive"}},marginRightResponsive:{name:"marginRight",table:{category:"Responsive"}},marginBottomResponsive:{name:"marginBottom",table:{category:"Responsive"}},marginLeftResponsive:{name:"marginLeft",table:{category:"Responsive"}}}},margin=(args=>({props:args,template:'\n<lg-card\n  [lgMargin]="margin"\n  [lgMarginTop]="marginTop !== \'undefined\' ? marginTop : null"\n  [lgMarginRight]="marginRight !== \'undefined\' ? marginRight : null"\n  [lgMarginBottom]="marginBottom !== \'undefined\' ? marginBottom : null"\n  [lgMarginLeft]="marginLeft !== \'undefined\' ? marginLeft : null">\n    <lg-card-content>\n      <strong>Standard spacing variant</strong>\n      <div *ngIf="margin"><code>margin: {{margin | json}}</code></div>\n      <div *ngIf="marginTop !== \'undefined\'"><code>marginTop: {{marginTop | json}}</code></div>\n      <div *ngIf="marginRight !== \'undefined\'"><code>marginRight: {{marginRight | json}}</code></div>\n      <div *ngIf="marginBottom !== \'undefined\'"><code>marginBottom: {{marginBottom | json}}</code></div>\n      <div *ngIf="marginLeft !== \'undefined\'"><code>marginLeft: {{marginLeft | json}}</code></div>\n    </lg-card-content>\n</lg-card>\n<lg-card\n  [lgMargin]="marginResponsive"\n  [lgMarginTop]="marginTopResponsive !== \'undefined\' ? marginTopResponsive : null"\n  [lgMarginRight]="marginRightResponsive !== \'undefined\' ? marginRightResponsive : null"\n  [lgMarginBottom]="marginBottomResponsive !== \'undefined\' ? marginBottomResponsive : null"\n  [lgMarginLeft]="marginLeftResponsive !== \'undefined\' ? marginLeftResponsive : null">\n    <lg-card-content>\n      <strong>Responsive Spacing Object</strong>\n      <div *ngIf="marginResponsive"><code>marginResponsive: {{marginResponsive | json}}</code></div>\n      <div *ngIf="marginTopResponsive"><code>marginTopResponsive: {{marginTopResponsive | json}}</code></div>\n      <div *ngIf="marginRightResponsive"><code>marginRightResponsive: {{marginRightResponsive | json}}</code></div>\n      <div *ngIf="marginBottomResponsive"><code>marginBottomResponsive: {{marginBottomResponsive | json}}</code></div>\n      <div *ngIf="marginLeftResponsive"><code>marginLeftResponsive: {{marginLeftResponsive | json}}</code></div>\n    </lg-card-content>\n</lg-card>\n<lg-card><lg-card-content>Card without directive applied</lg-card-content></lg-card>\n  '})).bind({});margin.storyName="Margin",margin.args={margin:"md",marginTop:"undefined",marginRight:"undefined",marginBottom:"undefined",marginLeft:"undefined",marginResponsive:{xs:"sm",sm:"md",md:"xxl"},marginTopResponsive:null,marginRightResponsive:null,marginBottomResponsive:null,marginLeftResponsive:null},margin.parameters={docs:{source:{code:null}}}},"./projects/canopy/src/lib/spacing/margin/margin.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>LgMarginModule});var _class,tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),spacing_service=__webpack_require__("./projects/canopy/src/lib/spacing/spacing.service.ts");let LgMarginDirective=((_class=class LgMarginDirective{set lgMarginTop(margin){this.marginTopClasses=this.toggleClasses(this.spacingService.createNewClasses(margin,"margin-top"),this.marginTopClasses)}set lgMarginRight(margin){this.marginRightClasses=this.toggleClasses(this.spacingService.createNewClasses(margin,"margin-right"),this.marginRightClasses)}set lgMarginBottom(margin){this.marginBottomClasses=this.toggleClasses(this.spacingService.createNewClasses(margin,"margin-bottom"),this.marginBottomClasses)}set lgMarginLeft(margin){this.marginLeftClasses=this.toggleClasses(this.spacingService.createNewClasses(margin,"margin-left"),this.marginLeftClasses)}set lgMarginHorizontal(margin){this.lgMarginLeft=margin,this.lgMarginRight=margin}set lgMarginVertical(margin){this.lgMarginTop=margin,this.lgMarginBottom=margin}set lgMargin(margin){this.marginClasses=this.toggleClasses(this.spacingService.createNewClasses(margin,"margin"),this.marginClasses)}constructor(renderer,hostElement,spacingService){this.renderer=renderer,this.hostElement=hostElement,this.spacingService=spacingService,this.marginTopClasses=[],this.marginRightClasses=[],this.marginBottomClasses=[],this.marginLeftClasses=[],this.marginClasses=[]}toggleClasses(newClasses,oldClasses){return oldClasses.length&&oldClasses.forEach((oldClass=>{this.renderer.removeClass(this.hostElement.nativeElement,oldClass)})),newClasses.forEach((newClass=>{this.renderer.addClass(this.hostElement.nativeElement,newClass)})),newClasses}}).ctorParameters=()=>[{type:core.Renderer2},{type:core.ElementRef},{type:spacing_service.i}],_class.propDecorators={lgMarginTop:[{type:core.Input}],lgMarginRight:[{type:core.Input}],lgMarginBottom:[{type:core.Input}],lgMarginLeft:[{type:core.Input}],lgMarginHorizontal:[{type:core.Input}],lgMarginVertical:[{type:core.Input}],lgMargin:[{type:core.Input}]},_class);LgMarginDirective=(0,tslib_es6.gn)([(0,core.Directive)({selector:"\n    [lgMargin],\n    [lgMarginVertical],\n    [lgMarginHorizontal],\n    [lgMarginTop],\n    [lgMarginRight],\n    [lgMarginBottom],\n    [lgMarginLeft]\n  "})],LgMarginDirective);let LgMarginModule=class LgMarginModule{};LgMarginModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule],declarations:[LgMarginDirective],exports:[LgMarginDirective]})],LgMarginModule)},"./projects/canopy/src/lib/spacing/spacing.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{i:()=>SpacingService});var BreakpointValues,_class,tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");!function(BreakpointValues){BreakpointValues.xs="0",BreakpointValues.sm="20rem",BreakpointValues.md="48rem",BreakpointValues.lg="64rem",BreakpointValues.xl="80rem",BreakpointValues.xxl="90rem"}(BreakpointValues||(BreakpointValues={}));let DynamicStyleService=((_class=class DynamicStyleService{constructor(){this.styleTag=null,this.selectors=[],this.mediaQueries={},this.addStyleTag()}addRules(rules){let styleTagCache=this.styleTag.innerHTML.slice();rules.filter((r=>!this.selectors.includes(r.selector))).map((r=>{this.selectors.push(r.selector),styleTagCache+=`.${r.selector}{${r.declaration}}`})),this.styleTag.innerHTML=styleTagCache}addRulesToMediaQuery(rules){let styleTagCache=this.styleTag.innerHTML.slice();rules.map((r=>{if(this.mediaQueries[r.breakpoint]||(styleTagCache+=this.createMediaQuery(r.breakpoint)),this.mediaQueries[r.breakpoint].includes(r.selector))return;this.mediaQueries[r.breakpoint].push(r.selector);const rule=`.${r.selector}{${r.declaration}}`;styleTagCache=this.insertRuleInsideMediaQuery(styleTagCache,r.breakpoint,rule,r.addAtStart)})),this.styleTag.innerHTML=styleTagCache}insertRuleInsideMediaQuery(cssString,breakpoint,rule,atStart=!1){const search=`@media(min-width:${breakpoint}){`;let index=cssString.indexOf(search);if(-1===index)return console.warn("Media query not found in string, cannot add rule."),cssString;if(index+=search.length,atStart)return cssString.substring(0,index)+`${rule}`+cssString.substring(index);let balance=0,pos=null;for(let i=index;i<cssString.length;i++){const char=cssString[i];if("{"===char?balance++:"}"===char&&balance--,-1===balance){pos=i;break}}return null===pos?(console.warn("Cannot add rule to media query in CSS string, invalid CSS string"),cssString):cssString.substring(0,pos)+`${rule}`+cssString.substring(pos)}addStyleTag(){this.styleTag=document.createElement("style"),this.styleTag.type="text/css",document.getElementsByTagName("head")[0].appendChild(this.styleTag)}createMediaQuery(breakpoint){if(!this.mediaQueries[breakpoint])return this.mediaQueries[breakpoint]=[],`@media(min-width:${breakpoint}){}`}}).ctorParameters=()=>[],_class);var SpacingValues,spacing_service_class;DynamicStyleService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],DynamicStyleService),function(SpacingValues){SpacingValues.none="0",SpacingValues.xxxs="0.25rem",SpacingValues.xxs="0.5rem",SpacingValues.xs="0.75rem",SpacingValues.sm="1rem",SpacingValues.md="1.5rem",SpacingValues.lg="2rem",SpacingValues.xl="2.5rem",SpacingValues.xxl="3rem",SpacingValues.xxxl="4.5rem",SpacingValues.xxxxl="9rem"}(SpacingValues||(SpacingValues={}));let SpacingService=((spacing_service_class=class SpacingService{constructor(dynamicStyleService){this.dynamicStyleService=dynamicStyleService}createNewClasses(spacing,cssProperty){const newClasses=[],responsiveSpacingRules=[];if(!spacing)return[];if("object"==typeof spacing)Object.keys(spacing).forEach((key=>{const selector=`lg-${cssProperty.replace("-","__")}--${key}--${spacing[key]}`;responsiveSpacingRules.push({selector,declaration:`${cssProperty}:${SpacingValues[spacing[key]]}!important`,breakpoint:BreakpointValues[key]}),newClasses.push(selector)})),this.dynamicStyleService.addRulesToMediaQuery(responsiveSpacingRules);else{const selector=`lg-${cssProperty.replace("-","__")}--${spacing}`;this.dynamicStyleService.addRules([{selector,declaration:`${cssProperty}:${SpacingValues[spacing]}!important`}]),newClasses.push(selector)}return newClasses}}).ctorParameters=()=>[{type:DynamicStyleService}],spacing_service_class);SpacingService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],SpacingService)}}]);