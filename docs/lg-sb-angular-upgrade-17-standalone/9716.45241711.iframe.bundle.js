(self.webpackChunk_legal_and_general_canopy=self.webpackChunk_legal_and_general_canopy||[]).push([[9716],{"./projects/canopy/src/lib/forms/radio/radio-button.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{g:()=>LgRadioButtonComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var radio_button_componentngResource=__webpack_require__("./projects/canopy/src/lib/forms/radio/radio-button.component.scss?ngResource"),radio_button_componentngResource_default=__webpack_require__.n(radio_button_componentngResource),radio_button_filter_componentngResource=__webpack_require__("./projects/canopy/src/lib/forms/radio/radio-button--filter.component.scss?ngResource"),radio_button_filter_componentngResource_default=__webpack_require__.n(radio_button_filter_componentngResource),radio_button_segment_componentngResource=__webpack_require__("./projects/canopy/src/lib/forms/radio/radio-button--segment.component.scss?ngResource"),radio_button_segment_componentngResource_default=__webpack_require__.n(radio_button_segment_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),error_state_matcher=__webpack_require__("./projects/canopy/src/lib/forms/validation/error-state-matcher.ts"),hint_component=__webpack_require__("./projects/canopy/src/lib/forms/hint/hint.component.ts"),dom_service=__webpack_require__("./projects/canopy/src/lib/utils/dom.service.ts"),radio_group_component=__webpack_require__("./projects/canopy/src/lib/forms/radio/radio-group.component.ts");let nextUniqueId=0,LgRadioButtonComponent=class LgRadioButtonComponent{set variant(variant){this._variant&&this.renderer.removeClass(this.hostElement.nativeElement,`lg-radio-button--${this.variant}`),this.renderer.addClass(this.hostElement.nativeElement,`lg-radio-button--${variant}`),this._variant=variant}get variant(){return this._variant}set stacked(stacked){this.renderer.removeClass(this.hostElement.nativeElement,`lg-radio-button--stacked-${this._stacked}`),stacked&&this.renderer.addClass(this.hostElement.nativeElement,`lg-radio-button--stacked-${stacked}`),this._stacked=stacked}get disabled(){return this._disabled||null!==this.radioGroup&&this.radioGroup.disabled}set disabled(isDisabled){this._disabled=isDisabled}get errorClass(){return this.errorState.isControlInvalid(this.control,this.controlContainer)}set hintElement(element){this.ariaDescribedBy=this.domService.toggleIdInStringProperty(this.ariaDescribedBy,this._hintElement,element),this._hintElement=element,this.hintPresent=!!element}constructor(control,radioGroup,errorState,controlContainer,renderer,hostElement,domService){this.control=control,this.radioGroup=radioGroup,this.errorState=errorState,this.controlContainer=controlContainer,this.renderer=renderer,this.hostElement=hostElement,this.domService=domService,this.checked=!1,this.hintPresent=!1,this.id="lg-radio-button-"+ ++nextUniqueId,this.size="sm",this._disabled=!1,this.blur=new core.EventEmitter,this.class=!0}ngOnInit(){this.variant=this.radioGroup.variant,this.radioGroup.value===this.value&&(this.checked=!0),this.name=this.radioGroup.name}onCheck(){this.radioGroup.onTouched(),this.radioGroup.value!==this.value&&(this.radioGroup.value=this.value)}onBlur(event){this.blur.emit(event)}static#_=this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:radio_group_component.X,decorators:[{type:core.Inject,args:[(0,core.forwardRef)((()=>radio_group_component.X))]}]},{type:error_state_matcher.B},{type:fesm2022_forms.j4,decorators:[{type:core.Optional},{type:core.Host},{type:core.SkipSelf}]},{type:core.Renderer2},{type:core.ElementRef},{type:dom_service.J}];static#_2=this.propDecorators={id:[{type:core.Input}],name:[{type:core.Input}],value:[{type:core.Input}],size:[{type:core.Input}],ariaDescribedBy:[{type:core.Input}],_disabled:[{type:core.Input}],blur:[{type:core.Output}],class:[{type:core.HostBinding,args:["class.lg-radio-button"]}],errorClass:[{type:core.HostBinding,args:["class.lg-radio-button--error"]}],hintElement:[{type:core.ContentChild,args:[hint_component.m]}]}};LgRadioButtonComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"lg-radio-button, lg-filter-button, lg-segment-button",template:'<input\n  (click)="onCheck()"\n  (blur)="onBlur($event)"\n  [checked]="checked || null"\n  [disabled]="disabled || null"\n  [attr.id]="id"\n  [attr.name]="name"\n  [attr.value]="value"\n  [attr.aria-invalid]="errorClass"\n  [attr.aria-describedby]="ariaDescribedBy || null"\n  class="lg-radio-button__input"\n  type="radio"\n/>\n\n<label\n  [attr.for]="id"\n  class="lg-radio-button__label"\n  [ngClass]="{\n    \'lg-radio-button__label--sm\': variant === \'radio\' && size === \'sm\',\n    \'lg-radio-button__label--lg\': variant === \'radio\' && size === \'lg\'\n  }">\n  <ng-content></ng-content>\n</label>\n\n<div *ngIf="hintPresent" class="lg-radio-button__hint">\n  <ng-content select="lg-hint"></ng-content>\n</div>\n',encapsulation:core.ViewEncapsulation.None,standalone:!0,imports:[common.NgClass,common.NgIf],styles:[radio_button_componentngResource_default(),radio_button_filter_componentngResource_default(),radio_button_segment_componentngResource_default()]})],LgRadioButtonComponent)},"./projects/canopy/src/lib/forms/radio/radio-group.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{X:()=>LgRadioGroupComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var radio_group_componentngResource=__webpack_require__("./projects/canopy/src/lib/forms/radio/radio-group.component.scss?ngResource"),radio_group_componentngResource_default=__webpack_require__.n(radio_group_componentngResource),radio_group_segment_componentngResource=__webpack_require__("./projects/canopy/src/lib/forms/radio/radio-group--segment.component.scss?ngResource"),radio_group_segment_componentngResource_default=__webpack_require__.n(radio_group_segment_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),dom_service=__webpack_require__("./projects/canopy/src/lib/utils/dom.service.ts"),hint_component=__webpack_require__("./projects/canopy/src/lib/forms/hint/hint.component.ts"),error_state_matcher=__webpack_require__("./projects/canopy/src/lib/forms/validation/error-state-matcher.ts"),validation_component=__webpack_require__("./projects/canopy/src/lib/forms/validation/validation.component.ts"),margin_directive=__webpack_require__("./projects/canopy/src/lib/spacing/margin/margin.directive.ts"),label_component=__webpack_require__("./projects/canopy/src/lib/forms/label/label.component.ts"),focus_directive=__webpack_require__("./projects/canopy/src/lib/focus/focus.directive.ts"),radio_button_component=__webpack_require__("./projects/canopy/src/lib/forms/radio/radio-button.component.ts");let uniqueId=0,LgRadioGroupComponent=class LgRadioGroupComponent{set stack(stack){this._stack&&this.renderer.removeClass(this.hostElement.nativeElement,`lg-radio-group--stack-${this.stack}`),stack&&this.renderer.addClass(this.hostElement.nativeElement,`lg-radio-group--stack-${stack}`),this._stack=stack}get stack(){return this._stack}get inlineClass(){return this.inline}get errorClass(){return this.errorState.isControlInvalid(this.control,this.controlContainer)}set radios(radios){radios.toArray().forEach((radio=>{radio.control=this.control})),this._radios=radios}get radios(){return this._radios}set hintElement(element){this.ariaDescribedBy=this.domService.toggleIdInStringProperty(this.ariaDescribedBy,this._validationElement,element),this._hintElement=element}set errorElement(element){this.ariaDescribedBy=this.domService.toggleIdInStringProperty(this.ariaDescribedBy,this._validationElement,element),this._validationElement=element}get value(){return this._value}set value(value){if(this._value=value,this.onChange(value),this.radios){const selectedRadio=this.radios.find((option=>option.value===value));selectedRadio&&!selectedRadio.checked&&(selectedRadio.checked=!0)}}get name(){return this._name}set name(value){this._name=value,this._updateRadioButtonNames()}constructor(control,errorState,controlContainer,domService,hostElement,renderer){this.control=control,this.errorState=errorState,this.controlContainer=controlContainer,this.domService=domService,this.hostElement=hostElement,this.renderer=renderer,this.nextUniqueId=++uniqueId,this._name=`lg-radio-group-${this.nextUniqueId}`,this._value=null,this.id=`lg-radio-group-id-${this.nextUniqueId}`,this.inline=!1,this.disabled=!1,this.focus=!1,this.class=!0,this.variant=this.hostElement.nativeElement.tagName.split("-")[1].toLowerCase(),null!=this.control&&(this.control.valueAccessor=this)}ngAfterContentInit(){this.radios&&this.stack&&this.radios.toArray().forEach((radio=>{radio.stacked=this.stack}))}onChange(value){this._value=value}onTouched(_){}writeValue(obj){this.value=obj}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled}_updateRadioButtonNames(){this.radios&&this.radios.forEach((radio=>{radio.name=this.name}))}static#_=this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:error_state_matcher.B},{type:fesm2022_forms.j4,decorators:[{type:core.Optional},{type:core.Host},{type:core.SkipSelf}]},{type:dom_service.J},{type:core.ElementRef},{type:core.Renderer2}];static#_2=this.propDecorators={id:[{type:core.Input}],inline:[{type:core.Input}],disabled:[{type:core.Input}],focus:[{type:core.Input}],ariaDescribedBy:[{type:core.Input}],stack:[{type:core.Input}],class:[{type:core.HostBinding,args:["class.lg-radio-group"]}],inlineClass:[{type:core.HostBinding,args:["class.lg-radio-group--inline"]}],errorClass:[{type:core.HostBinding,args:["class.lg-radio-group--error"]}],radios:[{type:core.ContentChildren,args:[(0,core.forwardRef)((()=>radio_button_component.g)),{descendants:!0}]}],hintElement:[{type:core.ContentChild,args:[hint_component.m]}],errorElement:[{type:core.ContentChild,args:[validation_component.Q]}],value:[{type:core.Input}],name:[{type:core.Input}]}};LgRadioGroupComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"lg-radio-group, lg-filter-group, lg-segment-group",template:'<fieldset\n  [attr.aria-describedby]="ariaDescribedBy || null"\n  [attr.tabindex]="focus ? \'-1\' : null"\n  [lgFocus]="focus"\n>\n  <legend lg-label [attr.for]="id" lgMarginBottom="xs">\n    <ng-content></ng-content>\n  </legend>\n  <ng-content select="lg-hint"></ng-content>\n\n  <div *ngIf="variant === \'segment\'; else generic" class="lg-radio-group__segment">\n    <ng-content select="lg-segment-button"></ng-content>\n  </div>\n\n  <ng-template #generic>\n    <ng-content select="lg-radio-button, lg-filter-button"></ng-content>\n  </ng-template>\n\n  <ng-content select="lg-validation"></ng-content>\n</fieldset>\n<ng-content select="lg-hint"></ng-content>\n',encapsulation:core.ViewEncapsulation.None,standalone:!0,imports:[focus_directive.t,label_component.d,margin_directive.X,common.NgIf],styles:[radio_group_componentngResource_default(),radio_group_segment_componentngResource_default()]})],LgRadioGroupComponent)},"./projects/canopy/src/lib/forms/radio/radio-button--filter.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-radio-button--filter {\n  display: inline-block;\n  margin-right: var(--space-xs);\n}\n.lg-radio-button--filter:last-of-type {\n  margin-right: 0;\n}\n.lg-radio-button--filter .lg-radio-button__input {\n  border: 0 !important;\n  clip: rect(0 0 0 0) !important;\n  height: auto !important;\n  margin: 0 !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  width: 0.0625em !important;\n  white-space: nowrap !important;\n}\n.lg-radio-button--filter .lg-radio-button__label {\n  display: inline-block;\n  border: solid var(--border-width) var(--filter-btn-bg-color-active);\n  border-radius: var(--space-md);\n  padding: var(--space-xxxs) var(--space-sm);\n  background: transparent;\n  font-size: var(--text-fs--8-size);\n  line-height: var(--filter-btn-line-height);\n  margin-bottom: var(--space-xs);\n  transition: all var(--animation-duration) var(--animation-fn);\n  cursor: pointer;\n}\n.lg-radio-button--filter .lg-radio-button__label::after {\n  content: none;\n}\n.lg-radio-button--filter .lg-radio-button__label::before {\n  content: none;\n}\n.lg-radio-button--filter .lg-radio-button__label:hover {\n  background-color: var(--filter-btn-bg-color-hover);\n  border-color: var(--filter-btn-bg-color-hover);\n  color: var(--filter-btn-text-color-selected);\n}\n.lg-radio-button--filter .lg-radio-button__label:active {\n  background-color: var(--filter-btn-bg-color-active);\n  border-color: var(--filter-btn-bg-color-active);\n  color: var(--filter-btn-text-color-selected);\n}\n.lg-radio-button--error .lg-radio-button--filter .lg-radio-button__label {\n  color: var(--form-error-color);\n}\n.lg-radio-button--filter .lg-radio-button__input:checked + .lg-radio-button__label {\n  background: var(--filter-btn-bg-color-selected);\n  border-color: var(--filter-btn-bg-color-selected);\n  color: var(--filter-btn-text-color-selected);\n}\n.lg-radio-button--filter .lg-radio-button__input:checked + .lg-radio-button__label:hover {\n  background: var(--filter-btn-bg-color-selected-hover);\n  border-color: var(--filter-btn-bg-color-selected-hover);\n}\n.lg-radio-button--filter .lg-radio-button__input:checked + .lg-radio-button__label:active {\n  background: var(--filter-btn-bg-color-selected-active);\n  border-color: var(--filter-btn-bg-color-selected-active);\n}\n.lg-radio-button--filter .lg-radio-button__input:focus-visible + .lg-radio-button__label {\n  outline: 0 !important;\n  box-shadow: 0 0 0 var(--inner-focus-width) var(--default-inner-focus-color), 0 0 0 var(--outer-focus-width) var(--default-focus-color);\n}\n.lg-radio-button--filter .lg-radio-button__input:disabled + .lg-radio-button__label {\n  background: var(--filter-btn-bg-color-disabled);\n  border-color: var(--filter-btn-bg-color-disabled);\n  color: var(--filter-btn-text-color-disabled);\n  pointer-events: none;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/canopy/src/lib/forms/radio/radio-button--segment.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-radio-button--segment {\n  display: flex;\n  flex-grow: 1;\n  flex-basis: auto;\n  align-items: stretch;\n  padding: 0 var(--space-xxxs);\n  margin: var(--space-xxxs) 0;\n}\n.lg-radio-button--segment + .lg-radio-button--segment {\n  border-left: var(--radio-segment-separator-border-width) solid var(--radio-segment-separator-border-color);\n}\n.lg-radio-button--segment .lg-radio-button__label {\n  display: flex;\n  padding: var(--space-xxxs) var(--space-sm);\n  border-radius: var(--border-radius-sm);\n  min-width: var(--radio-segment-label-min-width);\n  flex-grow: 1;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n.lg-radio-button--segment .lg-radio-button__label::before, .lg-radio-button--segment .lg-radio-button__label::after {\n  display: none;\n}\n.lg-radio-button--segment.lg-radio-button--error .lg-radio-button__input:checked + .lg-radio-button__label {\n  background-color: var(--form-error-color);\n  color: var(--radio-color);\n}\n.lg-radio-button--segment .lg-radio-button__input:checked + .lg-radio-button__label {\n  background-color: var(--radio-bg-color);\n  color: var(--radio-color);\n  transition: all var(--animation-duration) var(--animation-fn);\n}\n.lg-radio-button--segment .lg-radio-button__input:disabled:checked + .lg-radio-button__label {\n  background-color: var(--radio-disabled-color);\n  color: var(--radio-color);\n}\n.lg-radio-button--segment .lg-radio-button__input:disabled + .lg-radio-button__label {\n  color: var(--disabled-color);\n  cursor: not-allowed;\n}\n.lg-radio-button--segment .lg-radio-button__input:hover + .lg-radio-button__label {\n  background-color: var(--radio-segment-hover-bg-color);\n  color: var(--radio-color);\n  transition: all var(--animation-duration) var(--animation-fn);\n}\n.lg-radio-button--segment .lg-radio-button__input:focus-visible + .lg-radio-button__label {\n  outline: 0 !important;\n  box-shadow: 0 0 0 var(--inner-focus-width) var(--default-inner-focus-color), 0 0 0 var(--outer-focus-width) var(--default-focus-color);\n}\n.lg-radio-button--segment .lg-radio-button__input:focus-visible:hover + .lg-radio-button__label {\n  background-color: var(--radio-bg-color);\n  outline: 0 !important;\n  box-shadow: 0 0 0 var(--inner-focus-width) var(--default-inner-focus-color), 0 0 0 var(--outer-focus-width) var(--default-focus-color);\n}\n@media (max-width: 19.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-sm {\n    display: flex;\n    flex-flow: column wrap;\n    margin: 0;\n  }\n}\n@media (max-width: 19.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-sm .lg-radio-button__label {\n    margin: calc(var(--space-xxxs) + var(--radio-segment-separator-border-width)) 0 var(--space-xxxs);\n  }\n}\n@media (max-width: 19.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-sm + .lg-radio-button--segment {\n    border-left: 0;\n  }\n}\n@media (max-width: 19.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-sm + .lg-radio-button--segment::before {\n    content: "";\n    display: inline-block;\n    width: 100%;\n    height: var(--radio-segment-separator-border-width);\n    background-color: var(--radio-segment-separator-border-color);\n  }\n}\n@media (max-width: 47.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-md {\n    display: flex;\n    flex-flow: column wrap;\n    margin: 0;\n  }\n}\n@media (max-width: 47.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-md .lg-radio-button__label {\n    margin: calc(var(--space-xxxs) + var(--radio-segment-separator-border-width)) 0 var(--space-xxxs);\n  }\n}\n@media (max-width: 47.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-md + .lg-radio-button--segment {\n    border-left: 0;\n  }\n}\n@media (max-width: 47.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-md + .lg-radio-button--segment::before {\n    content: "";\n    display: inline-block;\n    width: 100%;\n    height: var(--radio-segment-separator-border-width);\n    background-color: var(--radio-segment-separator-border-color);\n  }\n}\n@media (max-width: 63.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-lg {\n    display: flex;\n    flex-flow: column wrap;\n    margin: 0;\n  }\n}\n@media (max-width: 63.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-lg .lg-radio-button__label {\n    margin: calc(var(--space-xxxs) + var(--radio-segment-separator-border-width)) 0 var(--space-xxxs);\n  }\n}\n@media (max-width: 63.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-lg + .lg-radio-button--segment {\n    border-left: 0;\n  }\n}\n@media (max-width: 63.94rem) {\n  .lg-radio-button--segment.lg-radio-button--stacked-lg + .lg-radio-button--segment::before {\n    content: "";\n    display: inline-block;\n    width: 100%;\n    height: var(--radio-segment-separator-border-width);\n    background-color: var(--radio-segment-separator-border-color);\n  }\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/canopy/src/lib/forms/radio/radio-button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-radio-button__hint {\n  margin-top: var(--space-xs);\n  padding-left: var(--space-lg);\n}\n\n.lg-radio-button--radio {\n  display: block;\n  margin-bottom: var(--space-sm);\n}\n.lg-radio-button--radio:last-of-type {\n  margin-bottom: var(--space-xs);\n}\n\n.lg-radio-button__input {\n  border: 0 !important;\n  clip: rect(0 0 0 0) !important;\n  height: auto !important;\n  margin: 0 !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  width: 0.0625em !important;\n  white-space: nowrap !important;\n}\n\n.lg-radio-button__label {\n  display: flex;\n  position: relative;\n  font-weight: var(--font-weight-regular);\n  padding-left: calc(var(--radio-outer-lg-width) + var(--space-xxs));\n}\n.lg-radio-button__input:disabled + .lg-radio-button__label {\n  color: var(--disabled-color);\n}\n.lg-radio-button--error .lg-radio-button__label {\n  color: var(--form-error-color);\n}\n\n.lg-radio-button__label::before {\n  content: " ";\n  left: 0;\n  top: 0;\n  bottom: 0;\n  display: inline-block;\n  height: var(--_radio-outer-height);\n  width: var(--_radio-outer-width);\n  background-color: var(--color-white);\n  border-radius: 50%;\n  border: var(--border-width) solid var(--radio-border-color);\n  margin: auto var(--space-sm) auto 0;\n  position: absolute;\n}\n.lg-radio-button__input:focus-visible + .lg-radio-button__label::before {\n  border-color: var(--border-focus-color);\n  outline: 0 !important;\n  box-shadow: 0 0 0 var(--inner-focus-width) var(--default-inner-focus-color), 0 0 0 var(--outer-focus-width) var(--default-focus-color);\n}\n.lg-radio-button:disabled .lg-radio-button__label::before {\n  border-color: var(--border-disabled-color);\n}\n.lg-radio-button--error:hover .lg-radio-button__label::before, .lg-radio-button--error .lg-radio-button__label::before {\n  border-color: var(--form-error-border-color);\n}\n\n.lg-radio-button__label--sm::before {\n  --_radio-outer-height: var(--radio-outer-height);\n  --_radio-outer-width: var(--radio-outer-width);\n}\n\n.lg-radio-button__label--lg::before {\n  --_radio-outer-height: var(--radio-outer-lg-height);\n  --_radio-outer-width: var(--radio-outer-lg-width);\n}\n\n.lg-radio-button__label::after {\n  content: " ";\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  height: var(--_radio-inner-height);\n  width: var(--_radio-inner-width);\n  margin: auto var(--_radio-inner-margin-horizontal);\n  border-radius: 50%;\n}\n.lg-radio-button__input:checked + .lg-radio-button__label::after {\n  background-color: var(--radio-bg-color);\n}\n.lg-radio-button__input:disabled:checked + .lg-radio-button__label::after {\n  background-color: var(--radio-disabled-color);\n}\n.lg-radio-button--error .lg-radio-button__input:checked + .lg-radio-button__label::after {\n  background-color: var(--form-error-border-color);\n}\n\n.lg-radio-button__label--sm::after {\n  --_radio-inner-margin-horizontal: calc(var(--radio-inner-height) / 2);\n  --_radio-inner-height: var(--radio-inner-height);\n  --_radio-inner-width: var(--radio-inner-width);\n}\n\n.lg-radio-button__label--lg::after {\n  --_radio-inner-margin-horizontal: calc(var(--radio-inner-lg-height) / 2);\n  --_radio-inner-height: var(--radio-inner-lg-height);\n  --_radio-inner-width: var(--radio-inner-lg-width);\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/canopy/src/lib/forms/radio/radio-group--segment.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/*\n  $bg-color: background color of the element.\n  $color: colour of the outline.\n  Sets the focus outline inside the element, by using multiple box shadows\n*/\n/*\n  $breakpoint: string value for the breakpoint screen size.\n  Creates a mixin which allows breakpoints to be added to css blocks\n*/\n.lg-radio-group__segment {\n  display: inline-flex;\n  border: var(--border-width) solid var(--radio-border-color);\n  border-radius: var(--border-radius-sm);\n}\n.lg-radio-group--error .lg-radio-group__segment {\n  border-color: var(--form-error-color);\n}\n\n@media (max-width: 19.94rem) {\n  .lg-radio-group--stack-sm .lg-radio-group__segment {\n    display: block;\n  }\n}\n\n@media (max-width: 47.94rem) {\n  .lg-radio-group--stack-md .lg-radio-group__segment {\n    display: block;\n  }\n}\n\n@media (max-width: 63.94rem) {\n  .lg-radio-group--stack-lg .lg-radio-group__segment {\n    display: block;\n  }\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/canopy/src/lib/forms/radio/radio-group.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'.lg-radio-group {\n  display: block;\n  margin-bottom: var(--component-margin);\n}\n\n.lg-radio-group--inline .lg-radio-button {\n  display: inline-block;\n  margin-right: var(--space-md);\n  vertical-align: top;\n}\n.lg-radio-group--inline .lg-radio-button:last-of-type {\n  margin-right: 0;\n}\n\nfieldset[tabindex="-1"]:focus-visible {\n  box-shadow: none;\n  outline: 0.25rem solid var(--default-focus-color);\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);