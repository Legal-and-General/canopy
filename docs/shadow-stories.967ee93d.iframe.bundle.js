(self.webpackChunk_legal_and_general_canopy=self.webpackChunk_legal_and_general_canopy||[]).push([[9191],{"./projects/canopy/src/lib/icon/icon.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>LgIconComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var icon_componentngResource=__webpack_require__("./projects/canopy/src/lib/icon/icon.component.scss?ngResource"),icon_componentngResource_default=__webpack_require__.n(icon_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),icon_registry=__webpack_require__("./projects/canopy/src/lib/icon/icon.registry.ts");let nextUniqueId=0,LgIconComponent=class LgIconComponent{set name(name){this.svgIcon&&this.hostElement.nativeElement.removeChild(this.svgIcon);const svgData=this.setSVGAttributes(this.iconRegistry.getIcon(name));this.svgIcon=this.svgElementFromString(svgData),this.hostElement.nativeElement.appendChild(this.svgIcon)}constructor(hostElement,iconRegistry,document){this.hostElement=hostElement,this.iconRegistry=iconRegistry,this.document=document,this.id=nextUniqueId++,this.class=!0,this.hidden=!0}setSVGAttributes(svgData){return svgData.replace(/id="\w+"/g,(()=>`id="lg-icon-${this.id}"`)).replace(/xlink:href="#\w+"/g,(()=>`xlink:href="#lg-icon-${this.id}"`))}svgElementFromString(svgContent){const div=this.document.createElement("div");return div.innerHTML=svgContent,div.querySelector("svg")}static#_=this.ctorParameters=()=>[{type:core.ElementRef},{type:icon_registry.g},{type:Document,decorators:[{type:core.Inject,args:[common.DOCUMENT]}]}];static#_2=this.propDecorators={class:[{type:core.HostBinding,args:["class.lg-icon"]}],hidden:[{type:core.HostBinding,args:["attr.aria-hidden"]}],name:[{type:core.Input}]}};LgIconComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"lg-icon",template:"<ng-content></ng-content>\n",encapsulation:core.ViewEncapsulation.None,standalone:!0,host:{ngSkipHydration:"true"},styles:[icon_componentngResource_default()]})],LgIconComponent)},"./projects/canopy/src/lib/icon/icon.registry.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{g:()=>LgIconRegistry});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let LgIconRegistry=class LgIconRegistry{constructor(){this.registry=new Map}registerIcons(icons){icons.forEach((icon=>{this.registry.set(icon.name,icon.data)}))}getIcon(name){return this.registry.has(name)||console.warn(`${name}: Icon not found, ensure it is added to the icon registry`),this.registry.get(name)}};LgIconRegistry=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)({providedIn:"root"})],LgIconRegistry)},"./projects/canopy/src/lib/shadow/shadow.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{v:()=>LgShadowDirective});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let LgShadowDirective=class LgShadowDirective{constructor(){this.class=!0}static#_=this.propDecorators={class:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["class.lg-shadow"]}]}};LgShadowDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({selector:"[lgShadow]",standalone:!0})],LgShadowDirective)},"./projects/canopy/src/lib/shadow/docs/shadow.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,shadowStory:()=>shadowStory});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_shadow_directive__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/canopy/src/lib/shadow/shadow.directive.ts"),_card__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/canopy/src/lib/card/card.component.ts"),_card__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./projects/canopy/src/lib/card/card-content/card-content.component.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Helpers/Directives/Shadow/Examples",component:_shadow_directive__WEBPACK_IMPORTED_MODULE_1__.v,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_card__WEBPACK_IMPORTED_MODULE_2__.F,_card__WEBPACK_IMPORTED_MODULE_3__.m]})],parameters:{backgrounds:{default:"White Smoke"}},argTypes:{class:{table:{disable:!0}}}},template="\n<lg-card lgShadow>\n  <lg-card-content>\n    Look, I have a shadow\n  </lg-card-content>\n</lg-card>\n",shadowStory=(args=>({props:args,template})).bind({});shadowStory.storyName="Shadow",shadowStory.parameters={docs:{source:{code:template}}},shadowStory.parameters={...shadowStory.parameters,docs:{...shadowStory.parameters?.docs,source:{originalSource:"(args: LgShadowDirective) => ({\n  props: args,\n  template\n})",...shadowStory.parameters?.docs?.source}}};const __namedExportsOrder=["shadowStory"]},"./projects/canopy/src/lib/icon/icon.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".lg-icon {\n  display: inline-block;\n  vertical-align: text-top;\n  height: var(--icon-height);\n  width: var(--icon-width);\n  min-width: var(--icon-width);\n  line-height: var(--icon-line-height);\n}\n.lg-icon > svg {\n  height: inherit;\n  width: inherit;\n  fill: currentColor;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);